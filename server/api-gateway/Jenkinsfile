pipeline {
    environment {
        repository = "vlwli99/api-gateway"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub_token')
        dockerImage = ''
    }

    agent any

    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }
        stage('Build Project') {
            steps {
                dir("./server/api-gateway") {
                    sh "chmod +x ./gradlew"
                    sh "./gradlew clean build"
                }
            }
        }
        stage('Build Image'){
            steps{
                script{
                    dockerImage = docker.build("${repository}:api-gateway-${BUILD_NUMBER}", "-f server/api-gateway/Dockerfile ./server/api-gateway")
                }
            }
        }

        stage('DockerHub Login'){
            steps{
                script{
                    sh "echo \${DOCKERHUB_PASSWORD} | docker login -u \${DOCKERHUB_ID} --password-stdin"
                }
            }
        }

        stage('Push Image'){
            steps{
                script{
                    sh "docker push \${repository}:api-gateway-\${BUILD_NUMBER}"
                }
            }
        }

        stage('Clean Image'){
            steps{
                script{
                    sh "docker rmi \${repository}:api-gateway-\${BUILD_NUMBER}"
                }
            }
        }

        stage("Garbage Collect") {
            steps {
                script {
                    def containers = sh(script: "docker ps -q --filter ancestor=\${repository}:api-gateway-\${BUILD_NUMBER}", returnStdout: true).trim()
                    if (containers) {
                        sh "docker kill \${containers}"
                    }
                    sh "docker system prune -af --volumes"
                }
            }
        }

        stage("Deploy"){
            steps{
                script{
                    sh "docker rm -f api-gateway || true"
                    dir("docker/api-gateway") {
                        sh "docker-compose up -d"
                    }
                }
            }
        }

    }
}
